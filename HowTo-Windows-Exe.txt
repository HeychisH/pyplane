Instructions for building the Windows executable using PyInstaller 3.2.1 on Python 3.5.2

1. Make sure PyInstaller 3.2.1 is installed in your Python environment!

2. Open the file build_exe.py and adjust the directories if required (be aware of the qt and zmq directories!).

3. In your python installation locate file build_main.py in the PyInstaller\building directory
   (e.g. C:\Progs32\WinPython-32bit-3.5.2.2Qt5\python-3.5.2\Lib\site-packages\PyInstaller\building\build_main.py)
   Open this file and go to the function "build(spec, distpath, workpath, clean_build)". Insert the line
		
		sys.setrecursionlimit(2147483647)
	
	just below the imports. Save the file. (This is to fix a bug on PyInstaller / modulegraph, see
	comment in PyInstaller\lib\modulegraph\modulegraph.py:
	#FIXME: To decrease the likelihood of ModuleGraph exceeding the recursion limit
	#and hence unpredictably raising fatal exceptions, increase the recursion
	#limit at PyInstaller startup (i.e., in the
	#PyInstaller.building.build_main.build() function). For details, see:
	#    https://github.com/pyinstaller/pyinstaller/issues/1919#issuecomment-216016176	)

4. In your python installation locate file compat.py in the PyInstaller directory
   (e.g. C:\Progs\WinPython-32bit-3.5.2.2Qt5\python-3.5.2\Lib\site-packages\PyInstaller\compat.py)
   Open this file and go to line of the function exec_command which contains

        out = out.decode(encoding)
   and replace it by
        try:
            out = out.decode(encoding)
        except UnicodeDecodeError:
            out = os.fsdecode(out)
			
5. In your python installation locate the file hook-botocore.py in the hooks directory of your PyInstaller directory
   (e.g. C:\Progs\WinPython-32bit-3.5.2.2Qt5\python-3.5.2\Lib\site-packages\PyInstaller\hooks\hook-botocore.py)
   Open this file and replace the lines

   from PyInstaller.utils.hooks import collect_data_files
   from PyInstaller.compat import is_py2, is_module_satisfies
   
   by

   from PyInstaller.utils.hooks import collect_data_files, is_module_satisfies
   from PyInstaller.compat import is_py2
			
6. Make sure that build_dir is not opened in any application or console, i.e.,
   it can be deleted by the script.
   
7. Run build_exe.py

8. The resulting exe should be found in build_dir\PyPlane.

9. If some modules are not found after launching the exe you have to manually 
   import them using the --hidden-import option in build_exe. This can be
   a time-consuming trial and error procedure.
   
10. Open the file InstallerPyPlane.nsi, adjust the version information if required, and run the
   file through NullSoft Installable System. Setup.exe will be placed into build_dir.
